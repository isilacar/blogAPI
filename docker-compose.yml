services:
  app:
    build: .
    container_name: blog-api
    restart: on-failure
    ports:
      - "8081:8080"
    networks:
      - blog-network
    environment:
      - spring.datasource.url=jdbc:mysql://mysql-db:3306/blogdb
    depends_on:
      mysql-db:
        condition: service_healthy

  mysql-db:
    image: mysql:8.1
    container_name: mysql
    ports:
      - "3307:3306"
    networks:
      - blog-network
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: blogdb
    healthcheck:
      test: [ "CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      timeout: 20s
      retries: 10
    volumes:
      - mysql-data-volume:/var/lib/mysql

  sonarqube:
    image: sonarqube:9-community
    container_name: sonarqube
    depends_on:
      mysql-db:
        condition: service_healthy
    ports:
      - "9000:9000"
    networks:
      - blog-network
    environment:
      - SONARQUBE_JDBC_URL=jdbc:mysql://mysql-db:3306/sonarqubedb?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance&useSSL=false
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp
      - sonarqube_config:/opt/sonarqube/conf
volumes:
  mysql-data-volume:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:
  sonarqube_config:

networks:
  blog-network:


