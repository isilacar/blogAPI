services:
  app:
    build: .
    container_name: blog-api
    restart: on-failure
    ports:
      - "8081:8080"
    networks:
      - blog-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/blogdb
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
    depends_on:
      mysql-db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  mysql-db:
    image: mysql:8.1
    container_name: mysql
    ports:
      - "3307:3306"
    networks:
      - blog-network
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: blogdb
    healthcheck:
      test: [ "CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      timeout: 20s
      retries: 10
    volumes:
      - mysql-data-volume:/var/lib/mysql

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.24
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - blog-network
    volumes:
      - elasticsearch-data-volume:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx1024m"
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail http://localhost:9200" ]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.24
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - blog-network
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy

volumes:
  mysql-data-volume:
  elasticsearch-data-volume:

networks:
  blog-network:


